            **** Rails ****


    1. Rails is an open source web framework that uses ruby programming language.

    2. Framework vs Library:  libraries target a specific functionality, while a framework tries to provide everything required to develop a complete application.

    3. Major principles of rails: - DRY (Don't Repeat Yourself) : Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.
                                  - Rails has opinions about the best way to do many things in a web application, and defaults to this set of conventions, rather than require that you specify minutiae through endless configuration files.

    4. MVC Architecture: MVC stands for Model View Controller Architecture. It helps in ensuring DRY principal is followed.

        - Model: Contains all the data related objects
        - View: Contains all the objects that will be shown to the user like html css js.
        - Controller: Contains all the code that will help in decision making process for a given request

        Working:
        - Request from browser will be sent too Controller for decision making
        - Controller will then ask the result of request from model which will be connected to the db 
        - then after recieving the result controller will show results to user using the View object.

    5. Create a new project: Command: rails new <application-name>

    6. Most of the coding is done in the app folder(95%) followed by config dir, gem file(packages used by our project) and db dir(database related files like db migration).

    7. We have different files for production,development,test environment inside the config dir.

    8. Generate controller: Command : rails generate controller Demo[Controller-name] index[List of views]
        
        this command will generate a new controller in the controller folder of app and also a view inside view folder (demo/index)
        also in the config file we will have a route created in routes.rb file showing that demo controller is associated with index view

    9. Rails Architecture(MVC arch explained wrt reality): Browser sends request using a web server(eg: apache) to the application.
        Now application before sending the req to rail framework checks that whether the asked path is present insdie the public folder or not.
        if it is present then the req is returned through public folder only and if it is not then the req is sent to the rails framework.

        Any file inside public folder is visible for users.

    10. Routing: It helps in determining which controller to be called according to the request.
        In short helps in determining the routes. routes.rb has all the routes which is present in the config folder

        Types of routes:
            -simple match route
            -default route
            -root route
            -resourceful routes

        Simple match route: Syntax: get "demo/index"
                                    or
                                    match "demo/index", :to => "demo#index", :via => :get (this is useful when we have to keep diff path name than controller name and view name)

        Default route: Syntax: get ":controller(/:action(/:id))"
                               or
                               match ':controller(/:action(/:id))', :via => :get

        root route: Syntax: root "demo#index"
                            or
                            match "/", :to => "demo#index", :via => :get
