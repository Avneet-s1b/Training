

LIST OF TABLES 

             List of relations
 Schema |      Name      | Type  |  Owner   
--------+----------------+-------+----------
 public | attendance_rec | table | postgres
 public | contact        | table | postgres
 public | department     | table | postgres
 public | employee       | table | postgres
(4 rows)


department

 dept_id |    dept_name     
---------+------------------
       1 | Human Resource
       2 | Engineering
       3 | Sales
       4 | Customer Service
(4 rows)


employee 

 emp_id | f_name |  l_name  |      email      | dept_id |    dob     | salary 
--------+--------+----------+-----------------+---------+------------+--------
      2 | Karan  | Aggarwal | karan@comp.com  |       3 | 1988-01-25 |  20000
      4 | Tanmay | Baisla   | tanmay@comp.com |       1 | 1995-11-22 |  20000
      3 | Sameer | Grover   | sameer@comp.com |       2 | 1998-04-04 |  15000
      5 | Ravi   | Sharma   | ravi@comp.com   |       4 | 1992-09-19 |  15000
      1 | Avneet | Singh    | avneet@comp.com |       2 | 2001-07-19 |  50000
      6 | Kunal  | Rautela  | kunal@comp.com  |         | 2002-03-22 |  77000
(6 rows)


contact 

 emp_id | mobile_no  
--------+------------
      1 | 8178646325
      1 | 9911164879
      2 | 9988646325
      3 | 9911167890
      3 | 8166896325
      4 | 9915644879
      5 | 8178646325
(7 rows)


attendance_rec

 att_id | emp_id |    day     | check_in | check_out 
--------+--------+------------+----------+-----------
      1 |      1 | 2023-10-28 | 10:00:00 | 19:00:00
      2 |      2 | 2023-10-28 | 10:02:00 | 20:00:00
      3 |      3 | 2023-10-28 | 09:35:00 | 19:00:00
      4 |      4 | 2023-10-28 | 10:15:00 | 19:20:00
      5 |      5 | 2023-10-28 | 08:00:00 | 17:00:00
      6 |      1 | 2023-10-30 | 10:02:00 | 19:22:00
      7 |      2 | 2023-10-30 | 10:00:00 | 19:00:00
      8 |      5 | 2023-10-30 | 10:00:00 | 18:00:00
      9 |      4 | 2023-10-30 |          | 
     10 |      3 | 2023-10-30 |          | 
(10 rows)



Q1: LIST OF ALL EMPLOYEES IN Engineering department.

- select e.f_name,d.dept_name from employee As e inner join department as d on e.dept_id = d.dept_id where d.dept_name = 'Engineering';
- Result:
 f_name |  dept_name  
--------+-------------
 Avneet | Engineering
 Sameer | Engineering
(2 rows)



Q2. LIST EMPLOYEES WITH DEPT AND PHONE NO 

-select e.f_name,d.dept_name,c.mobile_no from employee As e inner join department as d on e.dept_id = d.dept_id inner join contact As c on e.emp_id = c.emp_id;
Result-
 f_name |    dept_name     | mobile_no  
--------+------------------+------------
 Avneet | Engineering      | 8178646325
 Avneet | Engineering      | 9911164879
 Karan  | Sales            | 9988646325
 Sameer | Engineering      | 9911167890
 Sameer | Engineering      | 8166896325
 Tanmay | Human Resource   | 9915644879
 Ravi   | Customer Service | 8178646325
(7 rows)



Q3. find nth highest salary 

      USING MAX()
      - 2nd highest

            Command: select Max(salary) from employee where salary < (select Max(salary) from employee);
            Result:max  
                  -------
                  50000
                  (1 row)

            Command: select Max(salary) from employee where salary not in (select Max(salary) from employee);
            Result:max  
                  -------
                  50000
                  (1 row)

            NOT IN COMMAND CAN BE ONLY USED TO FIND 2ND HIGHEST SALARY WHEREAS
            < OPERATOR METHOD CAN BE USED TO FIND ANY N HIGHEST SALARY IT WILL JUST MAKE USE OF 
            NESTED SUBQUERIES 

            TO VIEW NAME AS WELL 
            COMMAND: select f_name,salary from employee where salary in (select Max(salary) from employee where salary < (select Max(salary) from employee));
            RESULT:f_name | salary 
                  --------+--------
                  Avneet |  50000
                  (1 row)


      USING LIMIT 
      - 2ND HIHEST
            COMMAND: select f_name,salary from employee order by salary desc limit 1 offset 1; 
            RESULT:f_name | salary 
                  --------+--------
                  Avneet |  50000
                  (1 row)
      - 3RD HIGHEST
            COMMAND: select f_name,salary from employee order by salary desc limit 1 offset 2; 
            RESULT:f_name | salary 
                  --------+--------
                  Karan  |  20000
                  (1 row)

      LIMIT CLAUSE CAN BE USED TO FIND ANY NUMBER OF SALARIES IF NOT UNIQUE SALARY PRESENT USE DISTINCT TO GET ACCURATE results


      USING SUBQUERIES 
      - 3RD HIGHEST
            COMMAND: select f_name,salary from employee as e1 where 2 = (select Count(Distinct(salary)) from employee as e2 where e2.salary>e1.salary);
            RESULT:f_name | salary 
                  --------+--------
                  Karan  |  20000
                  Tanmay |  20000
                  (2 rows)

      - 2ND HIGHEST 
            COMMAND: select f_name,salary from employee as e1 where 1 = (select Count(Distinct(salary)) from employee as e2 where e2.salary>e1.salary);
            RESULT:f_name | salary 
                  --------+--------
                  Avneet |  50000
                  (1 row)

Q4. people working hours 
    
    - people working less than 9 hours 
        Command:  select * from attendance_rec where Extract(hour from (check_out-check_in))<9;
        Result:att_id | emp_id |    day     | check_in | check_out 
                --------+--------+------------+----------+-----------
                    8 |      5 | 2023-10-30 | 10:00:00 | 18:00:00
                (1 row)

    - people working more than or equal to 9 hrs 
        Command: select * from attendance_rec where Extract(hour from (check_out-check_in))>=9;
        Result:att_id | emp_id |    day     | check_in | check_out 
                --------+--------+------------+----------+-----------
                    1 |      1 | 2023-10-28 | 10:00:00 | 19:00:00
                    2 |      2 | 2023-10-28 | 10:02:00 | 20:00:00
                    3 |      3 | 2023-10-28 | 09:35:00 | 19:00:00
                    4 |      4 | 2023-10-28 | 10:15:00 | 19:20:00
                    5 |      5 | 2023-10-28 | 08:00:00 | 17:00:00
                    6 |      1 | 2023-10-30 | 10:02:00 | 19:22:00
                    7 |      2 | 2023-10-30 | 10:00:00 | 19:00:00
                (7 rows)

    - people working more than 9 hours 
        Command: select * from attendance_rec where (check_out-check_in)>'09:00:00';
        Result:att_id | emp_id |    day     | check_in | check_out 
                --------+--------+------------+----------+-----------
                    2 |      2 | 2023-10-28 | 10:02:00 | 20:00:00
                    3 |      3 | 2023-10-28 | 09:35:00 | 19:00:00
                    4 |      4 | 2023-10-28 | 10:15:00 | 19:20:00
                    6 |      1 | 2023-10-30 | 10:02:00 | 19:22:00
                (4 rows)

Q5. 

New Table 

 emp_id |  f_name   | l_name  | manager_id 
--------+-----------+---------+------------
      1 | Avneet    | Singh   |          5
      2 | Rahul     | Tiwari  |          7
      3 | Deepanshu | Grover  |          6
      4 | Vipul     | Kumar   |           
      5 | Ram       | Charan  |          6
      6 | Karan     | Jaiswal |          4
      7 | Harshit   | Godara  |          6
(7 rows)

    - find all emp with their manager names
        Command:select * from employee as e1 join employee as e2 on e1.manager_id = e2.emp_id;
        Result:    emp_id |  f_name   | l_name  | manager_id | emp_id | f_name  | l_name  | manager_id 
                    --------+-----------+---------+------------+--------+---------+---------+------------
                        1 | Avneet    | Singh   |          5 |      5 | Ram     | Charan  |          6
                        2 | Rahul     | Tiwari  |          7 |      7 | Harshit | Godara  |          6
                        3 | Deepanshu | Grover  |          6 |      6 | Karan   | Jaiswal |          4
                        5 | Ram       | Charan  |          6 |      6 | Karan   | Jaiswal |          4
                        7 | Harshit   | Godara  |          6 |      6 | Karan   | Jaiswal |          4
                        6 | Karan     | Jaiswal |          4 |      4 | Vipul   | Kumar   |           
                    (6 rows)

    
    - find emp with no manager 
        Command: select * from employee as e1 left join employee as e2 on e1.manager_id = e2.emp_id where e1.manager_id is null;
        Result:    emp_id | f_name | l_name | manager_id | emp_id | f_name | l_name | manager_id 
                    --------+--------+--------+------------+--------+--------+--------+------------
                        4 | Vipul  | Kumar  |            |        |        |        |           
                    (1 row)

    
    - find emp whose manager has no manager 
        Command: select * from employee as e1 left join employee as e2 on e1.manager_id = e2.emp_id where e1.manager_id is null;
        Result:    emp_id | f_name | l_name | manager_id | emp_id | f_name | l_name | manager_id 
                    --------+--------+--------+------------+--------+--------+--------+------------
                        4 | Vipul  | Kumar  |            |        |        |        |           
                    (1 row)
