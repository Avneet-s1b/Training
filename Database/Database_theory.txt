                ***********INSTALLATION***********

1. Visit site https://www.postgresql.org/download/ .
2. Choose Linux operating system.
3. You will be redirected to PostgreSQL apt repository page.  
4. You will see the apt repository commands
5. Now run these commands in your terminal:
    a) sudo sh -c 'echo "deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
    b) wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    c) sudo apt-get update
    d) sudo apt-get -y install postgresql
7. Finally, your postgreSQL will have installed in your system.
8. To start , type : 
                sudo -i -u postgres
9. Fill your password it will move into postgres.
10. Then type, psql.
11. It will show you command line interface for postgreSQL.
12. To check postgre version type command:
    psql --version 


                ***********IMP THEORY TOPICS***********

    
    ER MODEL 
        - It is a high level data model based on a perception of a real world that consists of a collection of basic objects, called
        entities and of relationships among these objects.Graphical representation of ER Model is ER diagram, which acts as a blueprint of DB.

        - Entity: An Entity is aN object in the real world that is distinguishable from all other objects.
                  It has two types: Strong(Can be uniquely identified.) and 
                                    weak entity (Canâ€™t be uniquely identified., depends on some other strong entity.)

        - Attributes: An entity is represented by a set of attributes.(properties)
                    Types:  - simple
                            - composite
                            - single valued
                            - multi valued
                            - derived

                    - An attribute takes a null value when an entity does not have a value for it.

        - Relationships: Association among two or more entities e.g., Person has vehicle.
                    Types:  - Strong Relationship, between two independent entities.
                            - Weak Relationship, between weak entity and its owner/strong entity.

                    Degree of relationship: 
                    - Unary: only one entity participates
                    - Binary: two entity participate.
                    - ternanry: more than two entities participate.

                    Relationship constraints
                    1. Mapping cardinality
                        - one to one 
                        - one to many 
                        - many to one 
                        - many to many 
 
                    2. Participation constraint
                        - total participation (one entity will always have relation with other entity)
                        - partial participation (entity may not always have a relation eg. bank customer to loan)

                    

        - Specialisation: Specialisation is splitting up the entity set into further sub entity sets on the basis of their functionalities,
                        specialities and features. e.g., Person entity set can be divided into customer, student, employee. Person is superclass and other specialised
                        entity sets are subclasses. because Certain attributes may only be applicable to a few entities of
                        the parent entity set.

        
        - Generalization: It is reverse of Specialisation. bottom up approach.


    NORMALIZATION
        - Normalisation is used to minimise the redundancy from a relations. It is also used to eliminate undesirable
        characteristics like Insertion, Update, and Deletion Anomalies. Normalisation divides the composite attributes 
        into individual attributes OR larger table into smaller and links them using relationships.
        - To avoid redundancy in the DB, not to store redundant data.

        What happen if we have redundant data?
        - Insertion, deletion and updation anomalies arises.

        Types of Normal forms
            1. 1NF
                1. Every relation cell must have atomic value.
                2. Relation must not have multi-valued attributes.

            2. 2NF
                1. Relation must be in 1NF.
                2. There should not be any partial dependency.
                    1. All non-prime attributes must be fully dependent on PK.
                    2. Non prime attribute can not depend on the part of the PK.

            3. 3NF
                1. Relation must be in 2NF.
                2. No transitivity dependency exists.
                    1. Non-prime attribute should not find a non-prime attribute.

            4. BCNF (Boyce-Codd normal form)
                1. Relation must be in 3NF.
                2. FD: A -> B, A must be a super key.
                    1. We must not derive prime attribute from any prime or non-prime attribute.

        Advantages of Normalisation
            1. Normalisation helps to minimise data redundancy.
            2. Greater overall database organisation.
            3. Data consistency is maintained in DB.